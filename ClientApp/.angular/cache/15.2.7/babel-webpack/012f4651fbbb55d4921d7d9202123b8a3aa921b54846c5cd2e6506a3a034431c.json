{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TagbookService {\n  constructor(http) {\n    this.http = http;\n  }\n  // public tag: Observable<any> = of();\n  getTags() {\n    return this.http.get('https://localhost:7185/api/webtags');\n  }\n  saveTag(tag) {\n    console.log(tag);\n    this.http.post('https://localhost:7185/api/webtags', tag).subscribe(res => {\n      console.log(res);\n    });\n  }\n  deleteTag(tagId) {\n    this.http.delete('https://localhost:7185/api/webtags'[tagId]).subscribe();\n  }\n}\nTagbookService.ɵfac = function TagbookService_Factory(t) {\n  return new (t || TagbookService)(i0.ɵɵinject(i1.HttpClient));\n};\nTagbookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TagbookService,\n  factory: TagbookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAEzC;EAECC,OAAO;IACL,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAsD,oCAAoC,CAAC;EACjH;EAEAC,OAAO,CAACC,GAA8D;IACpEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,IAAI,CAACJ,IAAI,CAACO,IAAI,CAAC,oCAAoC,EAAEH,GAAG,CAAC,CAACI,SAAS,CAAEC,GAAG,IAAI;MAC1EJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;EAEAC,SAAS,CAACC,KAAa;IACrB,IAAI,CAACX,IAAI,CAACY,MAAM,CAAC,oCAAoC,CAACD,KAAK,CAAC,CAAC,CAACH,SAAS,EAAE;EAC3E;;AAnBWV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YAFb;AAAM","names":["TagbookService","constructor","http","getTags","get","saveTag","tag","console","log","post","subscribe","res","deleteTag","tagId","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\sasha\\source\\repos\\AngularNotes\\ClientApp\\src\\app\\services\\tagbook.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, shareReplay } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagbookService {\n\n  constructor(private http: HttpClient) { }\n\n // public tag: Observable<any> = of();\n\n  getTags(): Observable<[{ tagId: number; tagText: string; notesTags: [] }]> {\n    return this.http.get<[{ tagId: number; tagText: string; notesTags: [] }]>('https://localhost:7185/api/webtags');\n  }\n\n  saveTag(tag: { /*tagId: number;*/ tagText: string/*; notesTags: []*/ }){\n    console.log(tag);\n    this.http.post('https://localhost:7185/api/webtags', tag).subscribe((res) => {\n      console.log(res);\r\n    });\n  }\n\n  deleteTag(tagId: number) {\n    this.http.delete('https://localhost:7185/api/webtags'[tagId]).subscribe()\r\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}