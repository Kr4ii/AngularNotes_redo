{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TagbookService {\n  constructor(http) {\n    this.http = http;\n    this.tag = of();\n  }\n  getTags() {\n    return this.http.get('https://localhost:7185/api/webtags');\n  }\n  saveTag(tag) {\n    console.log(tag);\n    this.http.post('https://localhost:7185/api/webtags', tag).subscribe(res => {\n      console.log(res);\n    });\n  }\n}\nTagbookService.ɵfac = function TagbookService_Factory(t) {\n  return new (t || TagbookService)(i0.ɵɵinject(i1.HttpClient));\n};\nTagbookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TagbookService,\n  factory: TagbookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,EAAE,QAAqB,MAAM;;;AAKlD,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEjB,QAAG,GAAoBH,EAAE,EAAE;EAFM;EAIxCI,OAAO;IACL,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAsD,oCAAoC,CAAC;EACjH;EAEAC,OAAO,CAACC,GAAsD;IAC5DC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,IAAI,CAACJ,IAAI,CAACO,IAAI,CAAC,oCAAoC,EAAEH,GAAG,CAAC,CAACI,SAAS,CAAEC,GAAG,IAAI;MAC1EJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;;AAfWX,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAY,SAAdZ,cAAc;EAAAa,YAFb;AAAM","names":["of","TagbookService","constructor","http","getTags","get","saveTag","tag","console","log","post","subscribe","res","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\sasha\\source\\repos\\AngularNotes\\ClientApp\\src\\app\\services\\tagbook.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, shareReplay } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagbookService {\n\n  constructor(private http: HttpClient) { }\n\n  public tag: Observable<any> = of();\n\n  getTags(): Observable<[{ tagId: number; tagText: string; notesTags: [] }]> {\n    return this.http.get<[{ tagId: number; tagText: string; notesTags: [] }]>('https://localhost:7185/api/webtags');\n  }\n\n  saveTag(tag: { tagId: number; tagText: string; notesTags: [] }){\n    console.log(tag);\n    this.http.post('https://localhost:7185/api/webtags', tag).subscribe((res) => {\n      console.log(res)\r\n    });\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}