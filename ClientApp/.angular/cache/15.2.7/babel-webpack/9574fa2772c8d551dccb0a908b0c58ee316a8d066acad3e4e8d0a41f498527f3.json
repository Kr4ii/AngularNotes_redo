{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/tagbook.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TagsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"div\", 9)(3, \"div\", 10)(4, \"div\", 11)(5, \"p\", 12);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 13)(8, \"div\", 14)(9, \"button\", 15);\n    i0.ɵɵtext(10, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(tag_r1.tagText);\n  }\n}\nexport class TagsComponent {\n  constructor(tagbook) {\n    this.tagbook = tagbook;\n    tagbook.getTags().subscribe(tags => {\n      this.tagsList = tags;\n    });\n    /*    tagbook.saveTag(this.tag).subscribe(tag => {\r\n          tag = this.tag;\r\n        })*/\n  }\n}\n\nTagsComponent.ɵfac = function TagsComponent_Factory(t) {\n  return new (t || TagsComponent)(i0.ɵɵdirectiveInject(i1.TagbookService));\n};\nTagsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TagsComponent,\n  selectors: [[\"app-tags\"]],\n  decls: 9,\n  vars: 1,\n  consts: [[1, \"card\", \"text-dark\", \"mt-2\", 2, \"background-color\", \"snow\"], [1, \"container\", \"mt-4\"], [1, \"container\"], [1, \"input-group\", \"mb-3\"], [\"rows\", \"1\", \"id\", \"note-text\", \"placeholder\", \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0442\\u0435\\u0433\\u0430\", \"name\", \"text\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"footer\", 1, \"footer\", \"row\", \"mt-4\"], [1, \"card\", \"mt-2\"], [1, \"container\", \"mt-2\", \"mb-2\"], [1, \"row\"], [1, \"col\"], [1, \"h5\", \"text-center\"], [1, \"col-sm-2\"], [1, \"row\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\"]],\n  template: function TagsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"form\", 3);\n      i0.ɵɵelement(4, \"input\", 4);\n      i0.ɵɵelementStart(5, \"button\", 5);\n      i0.ɵɵtext(6, \"+\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(7, TagsComponent_div_7_Template, 11, 1, \"div\", 6);\n      i0.ɵɵelement(8, \"div\", 7);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tagsList);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAeAA,2BAAkC;IAOEA,YAAe;IAAAA,iBAAI;IAG/CA,+BAAsB;IAEoCA,2DAAO;IAAAA,iBAAS;;;;IAL9CA,eAAe;IAAfA,oCAAe;;;ACdnD,OAAM,MAAOC,aAAa;EAKxBC,YAAmBC,OAAuB;IAAvB,YAAO,GAAPA,OAAO;IAExBA,OAAO,CAACC,OAAO,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACjC,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,CAAC;IAEN;;;EAGK;;;AAdQL,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP1BZ,8BAAiE;MAK1DA,2BAAkG;MACjGA,iCAA8C;MAAAA,iBAAC;MAAAA,iBAAS;MAQhEA,+DAoBM;MAGNA,yBACM;;;MAxBeA,eAAW;MAAXA,sCAAW","names":["i0","TagsComponent","constructor","tagbook","getTags","subscribe","tags","tagsList","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\sasha\\source\\repos\\AngularNotes\\ClientApp\\src\\app\\tags\\tags.component.html","C:\\Users\\sasha\\source\\repos\\AngularNotes\\ClientApp\\src\\app\\tags\\tags.component.ts"],"sourcesContent":["<!--Добавить новый тег-->\n<div class=\"card text-dark mt-2\" style=\"background-color: snow \">\n  <div class=\"container mt-4\">\n    <form class=\"container\">\n\n      <form class=\"input-group mb-3\">\n       <input class=\"form-control\" rows=\"1\" id=\"note-text\"  placeholder=\"Введите текст тега\" name=\"text\">\n        <button type=\"submit\" class=\"btn btn-primary\">+</button>\n      </form>          \n\n    </form>\n  </div>\n</div>\n\n<!--Список тегов-->\n<div *ngFor=\"let tag of tagsList\">\n\n  <div class=\"card mt-2\">\n    <div class=\"container mt-2 mb-2\">\n      <div class=\"row\">\n\n        <div class=\"col\">          \n          <p class=\"h5 text-center\">{{tag.tagText}}</p>\n        </div>\n\n        <div class=\"col-sm-2\">                     \n            <div class=\"row text-center\">\n              <button type=\"button\" class=\"btn btn-danger btn-sm\">Удалить</button>\n            </div>          \n        </div>\n\n      </div>\n    </div>\n  </div>\n\n</div>\n\n<!-- Footer-->\n<div id=\"footer\" class=\"footer row mt-4\">\n</div>\n","import { Component } from '@angular/core';\nimport { TagbookService } from '../services/tagbook.service';\r\n\n@Component({\n  selector: 'app-tags',\n  templateUrl: './tags.component.html',\n  styleUrls: ['./tags.component.css']\n})\nexport class TagsComponent {\n\n  public tagsList: [{ tagId: number; tagText: string; notesTags: [] }] | undefined;\n  public tagRow!: { tagId: number; tagText: string; notesTags: [] };\n\n  constructor(public tagbook: TagbookService) {\n\n    tagbook.getTags().subscribe(tags => {\n      this.tagsList = tags;\n    })\n\n/*    tagbook.saveTag(this.tag).subscribe(tag => {\n      tag = this.tag;\r\n    })*/\n     } \n\n  }\n\n  \n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}