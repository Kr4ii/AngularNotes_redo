{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/reminderbook.service\";\nimport * as i2 from \"@angular/common\";\nfunction RemindersComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"h3\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 6)(10, \"p\");\n    i0.ɵɵtext(11, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit...\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 6);\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵelementStart(14, \"p\");\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 6)(18, \"div\", 7)(19, \"div\", 8)(20, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function RemindersComponent_div_0_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const reminder_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onDeleteReminder(reminder_r1.noteId, reminder_r1));\n    });\n    i0.ɵɵtext(21, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\");\n    i0.ɵɵelementEnd()()()()()()()();\n  }\n  if (rf & 2) {\n    const reminder_r1 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(reminder_r1.noteHeader);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reminder_r1.noteText);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(16, 3, reminder_r1.reminderDate, \"d.M.yyyy, HH:mm\"));\n  }\n}\nexport class RemindersComponent {\n  constructor(reminderbook) {\n    this.reminderbook = reminderbook;\n    reminderbook.getReminders().subscribe(reminders => {\n      this.remindersList = reminders;\n    });\n  }\n  onDeleteReminder(noteId, note) {\n    this.reminderbook.deleteReminder(noteId, note);\n  }\n}\nRemindersComponent.ɵfac = function RemindersComponent_Factory(t) {\n  return new (t || RemindersComponent)(i0.ɵɵdirectiveInject(i1.ReminderbookService));\n};\nRemindersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RemindersComponent,\n  selectors: [[\"app-reminders\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"id\", \"footer\", 1, \"footer\", \"row\", \"mt-4\"], [1, \"card\", \"text-dark\", \"mt-2\"], [1, \"container\", \"mt-4\", \"mb-2\"], [1, \"row\"], [1, \"col-sm-6\"], [1, \"col-sm-2\"], [1, \"container\"], [1, \"row\", \"mt-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"]],\n  template: function RemindersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, RemindersComponent_div_0_Template, 22, 6, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.remindersList);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAAAA,2BAA4C;IAO9BA,YAAuB;IAAAA,iBAAK;IAChCA,yBAAG;IAAAA,YAAqB;IAAAA,iBAAI;IAG9BA,8BAAsB;IACjBA,4EAA2D;IAAAA,iBAAI;IAGpEA,+BAAsB;IACpBA,sBAAM;IACNA,0BAAG;IAAAA,aAAoD;;IAAAA,iBAAI;IAG7DA,+BAAsB;IAMoCA;MAAA;MAAA;MAAA;MAAA,OAASA,uEAA0C;IAAA,EAAC;IAACA,2DAAO;IAAAA,iBAAS;;;;IAnBzHA,eAAuB;IAAvBA,4CAAuB;IACxBA,eAAqB;IAArBA,0CAAqB;IASrBA,eAAoD;IAApDA,wFAAoD;;;ACTjE,OAAM,MAAOC,kBAAkB;EAI7BC,YAAmBC,YAAiC;IAAjC,iBAAY,GAAZA,YAAY;IAE7BA,YAAY,CAACC,YAAY,EAAE,CAACC,SAAS,CAACC,SAAS,IAAG;MAChD,IAAI,CAACC,aAAa,GAAGD,SAAS;IAChC,CAAC,CAAC;EAEJ;EAEAE,gBAAgB,CAACC,MAAc,EAAEC,IAAmG;IAClI,IAAI,CAACP,YAAY,CAACQ,cAAc,CAACF,MAAM,EAAEC,IAAI,CAAC;EAChD;;AAdWT,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR/BhB,oEAmCM;MAGNA,yBACM;;;MAvCoBA,2CAAgB","names":["i0","RemindersComponent","constructor","reminderbook","getReminders","subscribe","reminders","remindersList","onDeleteReminder","noteId","note","deleteReminder","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\sasha\\source\\repos\\AngularNotes\\ClientApp\\src\\app\\reminders\\reminders.component.html","C:\\Users\\sasha\\source\\repos\\AngularNotes\\ClientApp\\src\\app\\reminders\\reminders.component.ts"],"sourcesContent":["<div *ngFor=\"let reminder of remindersList\">\n\n  <div class=\"card text-dark mt-2\">\n    <div class=\"container mt-4 mb-2\">\n      <div class=\"row\">\n\n        <div class=\"col-sm-6\">\n          <h3>{{reminder.noteHeader}}</h3>\n          <p>{{reminder.noteText}}</p>\n        </div>\n\n        <div class=\"col-sm-2\">\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit...</p>\n        </div>\n\n        <div class=\"col-sm-2\">\n          <br />\n          <p>{{reminder.reminderDate | date : 'd.M.yyyy, HH:mm'}}</p>\n        </div>\n\n        <div class=\"col-sm-2\">\n          <div class=\"container\">\n            <!--<div class=\"row mt-2\">\n              <button type=\"button\" class=\"btn btn-primary btn-sm\">Редактировать</button>\n            </div>-->\n            <div class=\"row mt-4\">\n              <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"onDeleteReminder(reminder.noteId,reminder)\">Удалить</button>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n</div>\n\n<!-- Footer-->\n<div id=\"footer\" class=\"footer row mt-4\">\n</div>\n","import { Component } from '@angular/core';\nimport { ReminderbookService } from '../services/reminderbook.service';\n\n@Component({\n  selector: 'app-reminders',\n  templateUrl: './reminders.component.html',\n  styleUrls: ['./reminders.component.css']\n})\nexport class RemindersComponent {\n\n  public remindersList: [{ noteId: number; noteHeader: string; noteText: string; reminderDate: Date; notesTags: [] }] | undefined;\n\n  constructor(public reminderbook: ReminderbookService) {\n\n    reminderbook.getReminders().subscribe(reminders => {\n      this.remindersList = reminders;\n    })\n       \n  }\n\n  onDeleteReminder(noteId: number, note: [{ noteId: number; noteHeader: string; noteText: string; reminderDate: Date; notesTags: [] }]) {\n    this.reminderbook.deleteReminder(noteId, note);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}