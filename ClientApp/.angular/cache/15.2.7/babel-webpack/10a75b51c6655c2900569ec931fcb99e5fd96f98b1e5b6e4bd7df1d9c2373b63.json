{"ast":null,"code":"import { of, shareReplay } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NotebookService {\n  constructor(http) {\n    this.http = http;\n    this.notes = of();\n  }\n  getNotes() {\n    return this.http.get('/api/webnotes');\n  }\n  saveNote(notes) {\n    this.notes = this.http.post('/api/webnotes', notes).pipe(shareReplay(1));\n    return this.notes;\n  }\n}\nNotebookService.ɵfac = function NotebookService_Factory(t) {\n  return new (t || NotebookService)(i0.ɵɵinject(i1.HttpClient));\n};\nNotebookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NotebookService,\n  factory: NotebookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,EAAE,EAAEC,WAAW,QAAQ,MAAM;;;AAKlD,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEjB,UAAK,GAAqBJ,EAAE,EAAE;EAFI;EAIzCK,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAqE,eAAe,CAAC;EAC3G;EAEAC,QAAQ,CAACC,KAAyE;IAChF,IAAI,CAACA,KAAK,GAAG,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAO,eAAe,EAAED,KAAK,CAAC,CAACE,IAAI,CAACT,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9E,OAAO,IAAI,CAACO,KAAK;EACnB;;AAbWN,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAS,SAAfT,eAAe;EAAAU,YAFd;AAAM","names":["of","shareReplay","NotebookService","constructor","http","getNotes","get","saveNote","notes","post","pipe","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\sasha\\source\\repos\\AngularNotes\\ClientApp\\src\\app\\services\\notebook.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\nimport { Observable, of, shareReplay } from 'rxjs';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotebookService {\n\n  constructor(private http: HttpClient ) { }\n\n  public notes: Observable<void> = of();\n\n  getNotes(): Observable<[{ id: number, note: string, reminderDate: Date, header: string }]> {\n    return this.http.get<[{ id: number, note: string, reminderDate: Date, header: string }]>('/api/webnotes');\n  }\n\r\n  saveNote(notes: [{ id: number, note: string, reminderDate: Date, header: string }]): Observable<void> {\n    this.notes = this.http.post<void>('/api/webnotes', notes).pipe(shareReplay(1));\r\n    return this.notes;\r\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}