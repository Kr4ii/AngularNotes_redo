{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet NotesComponent = class NotesComponent {\n  /*  public getNoteTags(noteId: number) {\r\n      return this.tagsList?.filter(x => x.tagId ==\r\n                                                   this.noteTagsList[\"tagId\"])\r\n    };*/\n  constructor(notebook) {\n    this.notebook = notebook;\n    notebook.getNotes().subscribe(notes => {\n      this.notesList = notes;\n    });\n    notebook.getTags().subscribe(tags => {\n      this.tagsList = tags;\n    });\n    notebook.getNoteTags(this.noteId).subscribe(tags => {\n      this.noteTagsList = tags;\n    });\n  }\n  //список тегов\n  onOptionsSelected() {\n    console.log(this.selected);\n    this.filtered = this.tagsList.filter(t => t.tagText == this.selected);\n  }\n};\nNotesComponent = __decorate([Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})], NotesComponent);\nexport { NotesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAU3B;;;;EAKEC,YAAmBC,QAAyB;IAAzB,aAAQ,GAARA,QAAQ;IAEzBA,QAAQ,CAACC,QAAQ,EAAE,CAACC,SAAS,CAACC,KAAK,IAAG;MACpC,IAAI,CAACC,SAAS,GAAGD,KAAK;IACxB,CAAC,CAAC;IAEFH,QAAQ,CAACK,OAAO,EAAE,CAACH,SAAS,CAACI,IAAI,IAAG;MAClC,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,CAAC;IAEFN,QAAQ,CAACQ,WAAW,CAAC,IAAI,CAACC,MAAM,CAAC,CAACP,SAAS,CAACI,IAAI,IAAG;MACjD,IAAI,CAACI,YAAY,GAAGJ,IAAI;IAC1B,CAAC,CAAC;EAEJ;EAEA;EACAK,iBAAiB;IACfC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC;IAC1B,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACR,QAAQ,CAACS,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,IAAI,IAAI,CAACJ,QAAQ,CAAC;EACvE;CACD;AApCYhB,cAAc,eAL1BD,SAAS,CAAC;EACTsB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWvB,cAAc,CAoC1B;SApCYA,cAAc","names":["Component","NotesComponent","constructor","notebook","getNotes","subscribe","notes","notesList","getTags","tags","tagsList","getNoteTags","noteId","noteTagsList","onOptionsSelected","console","log","selected","filtered","filter","t","tagText","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\sasha\\source\\repos\\AngularNotes\\ClientApp\\src\\app\\notes\\notes.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NotebookService } from '../services/notebook.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-notes',\r\n  templateUrl: './notes.component.html',\r\n  styleUrls: ['./notes.component.css']\r\n})\r\nexport class NotesComponent {\r\n\r\n\r\n\r\n  public notesList: [{ noteId: number; noteHeader: string; noteText: string; reminderDate: Date; notesTags: [] }] | undefined;\r\n  public tagsList!: [{ tagId: number; tagText: string; notesTags: [] }];\r\n  public noteTagsList: [{ id: number; tagId: number; noteId: number; }] | undefined;\r\n  public noteId!: number;\r\n  selected: any;\r\n  filtered: any;\r\n/*  public getNoteTags(noteId: number) {\r\n    return this.tagsList?.filter(x => x.tagId ==\r\n                                                 this.noteTagsList[\"tagId\"])\r\n  };*/\r\n\r\n  constructor(public notebook: NotebookService) {\r\n\r\n    notebook.getNotes().subscribe(notes => {\r\n      this.notesList = notes;\r\n    })\r\n\r\n    notebook.getTags().subscribe(tags => {\r\n      this.tagsList = tags;\r\n    })\r\n\r\n    notebook.getNoteTags(this.noteId).subscribe(tags => {\r\n      this.noteTagsList = tags;\r\n    })\r\n\r\n  }\r\n\r\n  //список тегов\r\n  onOptionsSelected() {\r\n    console.log(this.selected);\r\n    this.filtered = this.tagsList.filter(t => t.tagText == this.selected);\r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}